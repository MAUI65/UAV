# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/UAV',
                'doc_host': 'https://johnnewto.github.io',
                'git_url': 'https://github.com/johnnewto/UAV',
                'lib_path': 'UAV'},
  'syms': { 'UAV.airsim.client': { 'UAV.airsim.client.AirSimClient': ('api/airsim.client.html#airsimclient', 'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.__init__': ( 'api/airsim.client.html#airsimclient.__init__',
                                                                                'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.check_asset_exists': ( 'api/airsim.client.html#airsimclient.check_asset_exists',
                                                                                          'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.get_image': ( 'api/airsim.client.html#airsimclient.get_image',
                                                                                 'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.get_images': ( 'api/airsim.client.html#airsimclient.get_images',
                                                                                  'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.get_state': ( 'api/airsim.client.html#airsimclient.get_state',
                                                                                 'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.place_object': ( 'api/airsim.client.html#airsimclient.place_object',
                                                                                    'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.takeoff': ( 'api/airsim.client.html#airsimclient.takeoff',
                                                                               'UAV/airsim/client.py')},
            'UAV.airsim.commands': { 'UAV.airsim.commands.DroneCommands': ( 'api/airsim.commands.html#dronecommands',
                                                                            'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.__init__': ( 'api/airsim.commands.html#dronecommands.__init__',
                                                                                     'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.arm': ( 'api/airsim.commands.html#dronecommands.arm',
                                                                                'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.disarm': ( 'api/airsim.commands.html#dronecommands.disarm',
                                                                                   'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.do_NH_path': ( 'api/airsim.commands.html#dronecommands.do_nh_path',
                                                                                       'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.do_tasklist': ( 'api/airsim.commands.html#dronecommands.do_tasklist',
                                                                                        'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.land': ( 'api/airsim.commands.html#dronecommands.land',
                                                                                 'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.rth': ( 'api/airsim.commands.html#dronecommands.rth',
                                                                                'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.stop': ( 'api/airsim.commands.html#dronecommands.stop',
                                                                                 'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.takeoff': ( 'api/airsim.commands.html#dronecommands.takeoff',
                                                                                    'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.start_sim': ('api/airsim.commands.html#start_sim', 'UAV/airsim/commands.py')},
            'UAV.airsim_python_client.client': {},
            'UAV.airsim_python_client.pfm': {},
            'UAV.airsim_python_client.types': {},
            'UAV.airsim_python_client.utils': {},
            'UAV.camera.fake_cam': { 'UAV.camera.fake_cam.CV2Camera': ('api/camera.fake.html#cv2camera', 'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.__enter__': ( 'api/camera.fake.html#cv2camera.__enter__',
                                                                                  'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.__exit__': ( 'api/camera.fake.html#cv2camera.__exit__',
                                                                                 'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.__init__': ( 'api/camera.fake.html#cv2camera.__init__',
                                                                                 'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.__repr__': ( 'api/camera.fake.html#cv2camera.__repr__',
                                                                                 'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.__str__': ( 'api/camera.fake.html#cv2camera.__str__',
                                                                                'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.calculate_memory_usage': ( 'api/camera.fake.html#cv2camera.calculate_memory_usage',
                                                                                               'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.camera_capture_status_send': ( 'api/camera.fake.html#cv2camera.camera_capture_status_send',
                                                                                                   'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.camera_image_captured_send': ( 'api/camera.fake.html#cv2camera.camera_image_captured_send',
                                                                                                   'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.camera_settings_send': ( 'api/camera.fake.html#cv2camera.camera_settings_send',
                                                                                             'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.capture_image_thread': ( 'api/camera.fake.html#cv2camera.capture_image_thread',
                                                                                             'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.close': ( 'api/camera.fake.html#cv2camera.close',
                                                                              'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.get_next_image': ( 'api/camera.fake.html#cv2camera.get_next_image',
                                                                                       'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.image_start_capture': ( 'api/camera.fake.html#cv2camera.image_start_capture',
                                                                                            'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.log': ('api/camera.fake.html#cv2camera.log', 'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.save_image_to_memoryfs': ( 'api/camera.fake.html#cv2camera.save_image_to_memoryfs',
                                                                                               'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.storage_information_send': ( 'api/camera.fake.html#cv2camera.storage_information_send',
                                                                                                 'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CV2Camera.time_UTC_usec': ( 'api/camera.fake.html#cv2camera.time_utc_usec',
                                                                                      'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.CameraCaptureStatus': ( 'api/camera.fake.html#cameracapturestatus',
                                                                                  'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.GSTCamera': ('api/camera.fake.html#gstcamera', 'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.GSTCamera.__init__': ( 'api/camera.fake.html#gstcamera.__init__',
                                                                                 'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.GSTCamera.close': ( 'api/camera.fake.html#gstcamera.close',
                                                                              'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.GSTCamera.get_next_image': ( 'api/camera.fake.html#gstcamera.get_next_image',
                                                                                       'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.airsimCamera': ('api/camera.fake.html#airsimcamera', 'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.create_toml_file': ( 'api/camera.fake.html#create_toml_file',
                                                                               'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.read_camera_dict_from_toml': ( 'api/camera.fake.html#read_camera_dict_from_toml',
                                                                                         'UAV/camera/fake_cam.py'),
                                     'UAV.camera.fake_cam.videoCamera': ('api/camera.fake.html#videocamera', 'UAV/camera/fake_cam.py')},
            'UAV.camera_sdks.viewsheen.GST_Video': {},
            'UAV.camera_sdks.viewsheen.gimbal_cntrl': {},
            'UAV.config': {'UAV.config.say_gday': ('api/config.html#say_gday', 'UAV/config.py')},
            'UAV.core': {'UAV.core.say_gday': ('api/core.html#say_gday', 'UAV/core.py')},
            'UAV.gstreamer.valve': { 'UAV.gstreamer.valve.DefaultParams': ( 'api/gstreamer.valve.html#defaultparams',
                                                                            'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream': ('api/gstreamer.valve.html#gststream', 'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.__enter__': ( 'api/gstreamer.valve.html#gststream.__enter__',
                                                                                  'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.__exit__': ( 'api/gstreamer.valve.html#gststream.__exit__',
                                                                                 'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.__init__': ( 'api/gstreamer.valve.html#gststream.__init__',
                                                                                 'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.close': ( 'api/gstreamer.valve.html#gststream.close',
                                                                              'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.frame': ( 'api/gstreamer.valve.html#gststream.frame',
                                                                              'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.frame_available': ( 'api/gstreamer.valve.html#gststream.frame_available',
                                                                                        'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.get_valve_state': ( 'api/gstreamer.valve.html#gststream.get_valve_state',
                                                                                        'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.gst_to_opencv': ( 'api/gstreamer.valve.html#gststream.gst_to_opencv',
                                                                                      'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.msg_thread_func': ( 'api/gstreamer.valve.html#gststream.msg_thread_func',
                                                                                        'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.on_message': ( 'api/gstreamer.valve.html#gststream.on_message',
                                                                                   'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.set_valve_state': ( 'api/gstreamer.valve.html#gststream.set_valve_state',
                                                                                        'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.sink_callback': ( 'api/gstreamer.valve.html#gststream.sink_callback',
                                                                                      'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.start_gst': ( 'api/gstreamer.valve.html#gststream.start_gst',
                                                                                  'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt': ('api/gstreamer.valve.html#mqtt', 'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.__enter__': ( 'api/gstreamer.valve.html#mqtt.__enter__',
                                                                             'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.__exit__': ( 'api/gstreamer.valve.html#mqtt.__exit__',
                                                                            'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.__init__': ( 'api/gstreamer.valve.html#mqtt.__init__',
                                                                            'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.close': ('api/gstreamer.valve.html#mqtt.close', 'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.on_connect': ( 'api/gstreamer.valve.html#mqtt.on_connect',
                                                                              'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.on_mqtt_message': ( 'api/gstreamer.valve.html#mqtt.on_mqtt_message',
                                                                                   'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.wait_connection': ( 'api/gstreamer.valve.html#mqtt.wait_connection',
                                                                                   'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.ping_ip': ('api/gstreamer.valve.html#ping_ip', 'UAV/gstreamer/valve.py')},
            'UAV.imports': {},
            'UAV.logging': {},
            'UAV.mavlink.camera': { 'UAV.mavlink.camera.BaseCamera': ('api/mavlink.camera.html#basecamera', 'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.BaseCamera.__init__': ( 'api/mavlink.camera.html#basecamera.__init__',
                                                                                'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.BaseCamera.camera_information_send': ( 'api/mavlink.camera.html#basecamera.camera_information_send',
                                                                                               'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.BaseCamera.close': ( 'api/mavlink.camera.html#basecamera.close',
                                                                             'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.BaseCamera.get_camera_info': ( 'api/mavlink.camera.html#basecamera.get_camera_info',
                                                                                       'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient': ('api/mavlink.camera.html#cameraclient', 'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.__init__': ( 'api/mavlink.camera.html#cameraclient.__init__',
                                                                                  'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.image_start_capture': ( 'api/mavlink.camera.html#cameraclient.image_start_capture',
                                                                                             'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.image_stop_capture': ( 'api/mavlink.camera.html#cameraclient.image_stop_capture',
                                                                                            'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.on_mav_connection': ( 'api/mavlink.camera.html#cameraclient.on_mav_connection',
                                                                                           'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.on_message': ( 'api/mavlink.camera.html#cameraclient.on_message',
                                                                                    'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.request_camera_capture_status': ( 'api/mavlink.camera.html#cameraclient.request_camera_capture_status',
                                                                                                       'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.request_camera_information': ( 'api/mavlink.camera.html#cameraclient.request_camera_information',
                                                                                                    'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.request_camera_settings': ( 'api/mavlink.camera.html#cameraclient.request_camera_settings',
                                                                                                 'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.request_storage_information': ( 'api/mavlink.camera.html#cameraclient.request_storage_information',
                                                                                                     'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.send_message': ( 'api/mavlink.camera.html#cameraclient.send_message',
                                                                                      'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.set_camera_mode': ( 'api/mavlink.camera.html#cameraclient.set_camera_mode',
                                                                                         'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.set_camera_zoom': ( 'api/mavlink.camera.html#cameraclient.set_camera_zoom',
                                                                                         'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.storage_format': ( 'api/mavlink.camera.html#cameraclient.storage_format',
                                                                                        'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.video_start_capture': ( 'api/mavlink.camera.html#cameraclient.video_start_capture',
                                                                                             'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraClient.video_stop_capture': ( 'api/mavlink.camera.html#cameraclient.video_stop_capture',
                                                                                            'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer': ('api/mavlink.camera.html#cameraserver', 'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.__init__': ( 'api/mavlink.camera.html#cameraserver.__init__',
                                                                                  'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.camera_capture_status_send': ( 'api/mavlink.camera.html#cameraserver.camera_capture_status_send',
                                                                                                    'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.camera_information_send': ( 'api/mavlink.camera.html#cameraserver.camera_information_send',
                                                                                                 'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.camera_settings_send': ( 'api/mavlink.camera.html#cameraserver.camera_settings_send',
                                                                                              'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.close': ( 'api/mavlink.camera.html#cameraserver.close',
                                                                               'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.image_start_capture': ( 'api/mavlink.camera.html#cameraserver.image_start_capture',
                                                                                             'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.image_stop_capture': ( 'api/mavlink.camera.html#cameraserver.image_stop_capture',
                                                                                            'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.on_mav_connection': ( 'api/mavlink.camera.html#cameraserver.on_mav_connection',
                                                                                           'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.on_message': ( 'api/mavlink.camera.html#cameraserver.on_message',
                                                                                    'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.set_camera_mode': ( 'api/mavlink.camera.html#cameraserver.set_camera_mode',
                                                                                         'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.set_camera_zoom': ( 'api/mavlink.camera.html#cameraserver.set_camera_zoom',
                                                                                         'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.storage_format': ( 'api/mavlink.camera.html#cameraserver.storage_format',
                                                                                        'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.storage_information_send': ( 'api/mavlink.camera.html#cameraserver.storage_information_send',
                                                                                                  'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.video_start_capture': ( 'api/mavlink.camera.html#cameraserver.video_start_capture',
                                                                                             'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.CameraServer.video_stop_capture': ( 'api/mavlink.camera.html#cameraserver.video_stop_capture',
                                                                                            'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.WaitMessage': ('api/mavlink.camera.html#waitmessage', 'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.WaitMessage.__init__': ( 'api/mavlink.camera.html#waitmessage.__init__',
                                                                                 'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.WaitMessage.clear': ( 'api/mavlink.camera.html#waitmessage.clear',
                                                                              'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.WaitMessage.get': ( 'api/mavlink.camera.html#waitmessage.get',
                                                                            'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.WaitMessage.is_set': ( 'api/mavlink.camera.html#waitmessage.is_set',
                                                                               'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.WaitMessage.log': ( 'api/mavlink.camera.html#waitmessage.log',
                                                                            'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.WaitMessage.on_condition': ( 'api/mavlink.camera.html#waitmessage.on_condition',
                                                                                     'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.WaitMessage.set': ( 'api/mavlink.camera.html#waitmessage.set',
                                                                            'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.WaitMessage.set_condition': ( 'api/mavlink.camera.html#waitmessage.set_condition',
                                                                                      'UAV/mavlink/camera.py'),
                                    'UAV.mavlink.camera.read_camera_info_from_toml': ( 'api/mavlink.camera.html#read_camera_info_from_toml',
                                                                                       'UAV/mavlink/camera.py')},
            'UAV.mavlink.component': { 'UAV.mavlink.component.Component': ( 'api/mavlink.component.html#component',
                                                                            'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.__init__': ( 'api/mavlink.component.html#component.__init__',
                                                                                     'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.__repr__': ( 'api/mavlink.component.html#component.__repr__',
                                                                                     'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.__str__': ( 'api/mavlink.component.html#component.__str__',
                                                                                    'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component._on_message_rcvd': ( 'api/mavlink.component.html#component._on_message_rcvd',
                                                                                             'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component._test_command': ( 'api/mavlink.component.html#component._test_command',
                                                                                          'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.close': ( 'api/mavlink.component.html#component.close',
                                                                                  'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.count_message': ( 'api/mavlink.component.html#component.count_message',
                                                                                          'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.listen': ( 'api/mavlink.component.html#component.listen',
                                                                                   'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.log': ( 'api/mavlink.component.html#component.log',
                                                                                'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.on_mav_connection': ( 'api/mavlink.component.html#component.on_mav_connection',
                                                                                              'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.send_ack': ( 'api/mavlink.component.html#component.send_ack',
                                                                                     'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.send_command': ( 'api/mavlink.component.html#component.send_command',
                                                                                         'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.send_heartbeat': ( 'api/mavlink.component.html#component.send_heartbeat',
                                                                                           'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.send_ping': ( 'api/mavlink.component.html#component.send_ping',
                                                                                      'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.set_message_callback': ( 'api/mavlink.component.html#component.set_message_callback',
                                                                                                 'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.set_source_compenent': ( 'api/mavlink.component.html#component.set_source_compenent',
                                                                                                 'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.set_target': ( 'api/mavlink.component.html#component.set_target',
                                                                                       'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.start_mav_connection': ( 'api/mavlink.component.html#component.start_mav_connection',
                                                                                                 'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.wait_ack': ( 'api/mavlink.component.html#component.wait_ack',
                                                                                     'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.Component.wait_heartbeat': ( 'api/mavlink.component.html#component.wait_heartbeat',
                                                                                           'UAV/mavlink/component.py'),
                                       'UAV.mavlink.component.mavlink_command_to_string': ( 'api/mavlink.component.html#mavlink_command_to_string',
                                                                                            'UAV/mavlink/component.py')},
            'UAV.mavlink.mavcom': { 'UAV.mavlink.mavcom.BaseComponent': ('api/mavlink.mavcom.html#basecomponent', 'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.__init__': ( 'api/mavlink.mavcom.html#basecomponent.__init__',
                                                                                   'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.__repr__': ( 'api/mavlink.mavcom.html#basecomponent.__repr__',
                                                                                   'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.__str__': ( 'api/mavlink.mavcom.html#basecomponent.__str__',
                                                                                  'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.close': ( 'api/mavlink.mavcom.html#basecomponent.close',
                                                                                'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.count_message': ( 'api/mavlink.mavcom.html#basecomponent.count_message',
                                                                                        'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.listen': ( 'api/mavlink.mavcom.html#basecomponent.listen',
                                                                                 'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.log': ( 'api/mavlink.mavcom.html#basecomponent.log',
                                                                              'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.on_ack': ( 'api/mavlink.mavcom.html#basecomponent.on_ack',
                                                                                 'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.on_command_rcvd': ( 'api/mavlink.mavcom.html#basecomponent.on_command_rcvd',
                                                                                          'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.on_heartbeat': ( 'api/mavlink.mavcom.html#basecomponent.on_heartbeat',
                                                                                       'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.on_message': ( 'api/mavlink.mavcom.html#basecomponent.on_message',
                                                                                     'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.send_heartbeat': ( 'api/mavlink.mavcom.html#basecomponent.send_heartbeat',
                                                                                         'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.send_ping': ( 'api/mavlink.mavcom.html#basecomponent.send_ping',
                                                                                    'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.set_mav_connection': ( 'api/mavlink.mavcom.html#basecomponent.set_mav_connection',
                                                                                             'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.BaseComponent.set_source_compenent': ( 'api/mavlink.mavcom.html#basecomponent.set_source_compenent',
                                                                                               'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom': ('api/mavlink.mavcom.html#mavcom', 'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.__enter__': ( 'api/mavlink.mavcom.html#mavcom.__enter__',
                                                                             'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.__exit__': ( 'api/mavlink.mavcom.html#mavcom.__exit__',
                                                                            'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.__init__': ( 'api/mavlink.mavcom.html#mavcom.__init__',
                                                                            'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.__repr__': ( 'api/mavlink.mavcom.html#mavcom.__repr__',
                                                                            'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.__str__': ( 'api/mavlink.mavcom.html#mavcom.__str__',
                                                                           'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.add_component': ( 'api/mavlink.mavcom.html#mavcom.add_component',
                                                                                 'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.check_message_route': ( 'api/mavlink.mavcom.html#mavcom.check_message_route',
                                                                                       'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.close': ('api/mavlink.mavcom.html#mavcom.close', 'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.count_message': ( 'api/mavlink.mavcom.html#mavcom.count_message',
                                                                                 'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.listen': ('api/mavlink.mavcom.html#mavcom.listen', 'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.log': ('api/mavlink.mavcom.html#mavcom.log', 'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.start_listen': ( 'api/mavlink.mavcom.html#mavcom.start_listen',
                                                                                'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.start_mavlink': ( 'api/mavlink.mavcom.html#mavcom.start_mavlink',
                                                                                 'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.MAVCom.summary': ( 'api/mavlink.mavcom.html#mavcom.summary',
                                                                           'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.date_time_str': ('api/mavlink.mavcom.html#date_time_str', 'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.format_rcvd_msg': ( 'api/mavlink.mavcom.html#format_rcvd_msg',
                                                                            'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.get_linenumber': ( 'api/mavlink.mavcom.html#get_linenumber',
                                                                           'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.test_MAVCom': ('api/mavlink.mavcom.html#test_mavcom', 'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.time_UTC_usec': ('api/mavlink.mavcom.html#time_utc_usec', 'UAV/mavlink/mavcom.py'),
                                    'UAV.mavlink.mavcom.time_since_boot_ms': ( 'api/mavlink.mavcom.html#time_since_boot_ms',
                                                                               'UAV/mavlink/mavcom.py')},
            'UAV.mavlink.vs_gimbal': { 'UAV.mavlink.vs_gimbal.GimbalClient': ( 'api/mavlink.viewsheen_gimbal.html#gimbalclient',
                                                                               'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalClient.__init__': ( 'api/mavlink.viewsheen_gimbal.html#gimbalclient.__init__',
                                                                                        'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalClient.send_message': ( 'api/mavlink.viewsheen_gimbal.html#gimbalclient.send_message',
                                                                                            'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalClient.set_attitude': ( 'api/mavlink.viewsheen_gimbal.html#gimbalclient.set_attitude',
                                                                                            'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalClient.set_zoom': ( 'api/mavlink.viewsheen_gimbal.html#gimbalclient.set_zoom',
                                                                                        'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalClient.start_capture': ( 'api/mavlink.viewsheen_gimbal.html#gimbalclient.start_capture',
                                                                                             'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalClient.stop_capture': ( 'api/mavlink.viewsheen_gimbal.html#gimbalclient.stop_capture',
                                                                                            'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalServer': ( 'api/mavlink.viewsheen_gimbal.html#gimbalserver',
                                                                               'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalServer.__init__': ( 'api/mavlink.viewsheen_gimbal.html#gimbalserver.__init__',
                                                                                        'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalServer.close': ( 'api/mavlink.viewsheen_gimbal.html#gimbalserver.close',
                                                                                     'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalServer.connect': ( 'api/mavlink.viewsheen_gimbal.html#gimbalserver.connect',
                                                                                       'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalServer.on_message': ( 'api/mavlink.viewsheen_gimbal.html#gimbalserver.on_message',
                                                                                          'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalServer.set_attitude': ( 'api/mavlink.viewsheen_gimbal.html#gimbalserver.set_attitude',
                                                                                            'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalServer.set_zoom': ( 'api/mavlink.viewsheen_gimbal.html#gimbalserver.set_zoom',
                                                                                        'UAV/mavlink/vs_gimbal.py'),
                                       'UAV.mavlink.vs_gimbal.GimbalServer.start_capture': ( 'api/mavlink.viewsheen_gimbal.html#gimbalserver.start_capture',
                                                                                             'UAV/mavlink/vs_gimbal.py')},
            'UAV.params': {},
            'UAV.process': {},
            'UAV.template.o1': {},
            'UAV.template01': {},
            'UAV.utils.display': { 'UAV.utils.display.ScrollingLog': ('api/utils.display.html#scrollinglog', 'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLog.__init__': ( 'api/utils.display.html#scrollinglog.__init__',
                                                                                'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLog.draw': ( 'api/utils.display.html#scrollinglog.draw',
                                                                            'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLog.update': ( 'api/utils.display.html#scrollinglog.update',
                                                                              'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLogHandler': ( 'api/utils.display.html#scrollingloghandler',
                                                                              'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLogHandler.__init__': ( 'api/utils.display.html#scrollingloghandler.__init__',
                                                                                       'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLogHandler.emit': ( 'api/utils.display.html#scrollingloghandler.emit',
                                                                                   'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLogHandler.set_filter': ( 'api/utils.display.html#scrollingloghandler.set_filter',
                                                                                         'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter': ('api/utils.display.html#videowriter', 'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter.__enter__': ( 'api/utils.display.html#videowriter.__enter__',
                                                                                'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter.__exit__': ( 'api/utils.display.html#videowriter.__exit__',
                                                                               'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter.__init__': ( 'api/utils.display.html#videowriter.__init__',
                                                                               'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter.add': ('api/utils.display.html#videowriter.add', 'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter.close': ( 'api/utils.display.html#videowriter.close',
                                                                            'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter.show': ( 'api/utils.display.html#videowriter.show',
                                                                           'UAV/utils/display.py'),
                                   'UAV.utils.display._fig_bounds': ('api/utils.display.html#_fig_bounds', 'UAV/utils/display.py'),
                                   'UAV.utils.display.puttext': ('api/utils.display.html#puttext', 'UAV/utils/display.py'),
                                   'UAV.utils.display.show_image': ('api/utils.display.html#show_image', 'UAV/utils/display.py')},
            'UAV.utils.general': { 'UAV.utils.general.LeakyQueue': ('api/utils.general.html#leakyqueue', 'UAV/utils/general.py'),
                                   'UAV.utils.general.LeakyQueue.__init__': ( 'api/utils.general.html#leakyqueue.__init__',
                                                                              'UAV/utils/general.py'),
                                   'UAV.utils.general.LeakyQueue.dropped': ( 'api/utils.general.html#leakyqueue.dropped',
                                                                             'UAV/utils/general.py'),
                                   'UAV.utils.general.LeakyQueue.put': ('api/utils.general.html#leakyqueue.put', 'UAV/utils/general.py'),
                                   'UAV.utils.general.euler_to_quaternion': ( 'api/utils.general.html#euler_to_quaternion',
                                                                              'UAV/utils/general.py')},
            'UAV.utils.sim_linux': {}}}
