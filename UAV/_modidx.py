# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/UAV',
                'doc_host': 'https://johnnewto.github.io',
                'git_url': 'https://github.com/johnnewto/UAV',
                'lib_path': 'UAV'},
  'syms': { 'UAV.airsim.client': { 'UAV.airsim.client.AirSimClient': ('api/airsim.client.html#airsimclient', 'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.__init__': ( 'api/airsim.client.html#airsimclient.__init__',
                                                                                'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.check_asset_exists': ( 'api/airsim.client.html#airsimclient.check_asset_exists',
                                                                                          'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.get_image': ( 'api/airsim.client.html#airsimclient.get_image',
                                                                                 'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.get_images': ( 'api/airsim.client.html#airsimclient.get_images',
                                                                                  'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.get_state': ( 'api/airsim.client.html#airsimclient.get_state',
                                                                                 'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.place_object': ( 'api/airsim.client.html#airsimclient.place_object',
                                                                                    'UAV/airsim/client.py'),
                                   'UAV.airsim.client.AirSimClient.takeoff': ( 'api/airsim.client.html#airsimclient.takeoff',
                                                                               'UAV/airsim/client.py')},
            'UAV.airsim.commands': { 'UAV.airsim.commands.DroneCommands': ( 'api/airsim.commands.html#dronecommands',
                                                                            'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.__init__': ( 'api/airsim.commands.html#dronecommands.__init__',
                                                                                     'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.arm': ( 'api/airsim.commands.html#dronecommands.arm',
                                                                                'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.disarm': ( 'api/airsim.commands.html#dronecommands.disarm',
                                                                                   'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.do_NH_path': ( 'api/airsim.commands.html#dronecommands.do_nh_path',
                                                                                       'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.do_tasklist': ( 'api/airsim.commands.html#dronecommands.do_tasklist',
                                                                                        'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.land': ( 'api/airsim.commands.html#dronecommands.land',
                                                                                 'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.rth': ( 'api/airsim.commands.html#dronecommands.rth',
                                                                                'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.stop': ( 'api/airsim.commands.html#dronecommands.stop',
                                                                                 'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.DroneCommands.takeoff': ( 'api/airsim.commands.html#dronecommands.takeoff',
                                                                                    'UAV/airsim/commands.py'),
                                     'UAV.airsim.commands.start_sim': ('api/airsim.commands.html#start_sim', 'UAV/airsim/commands.py')},
            'UAV.airsim_python_client.client': {},
            'UAV.airsim_python_client.pfm': {},
            'UAV.airsim_python_client.types': {},
            'UAV.airsim_python_client.utils': {},
            'UAV.camera.control': { 'UAV.camera.control.airsimCamera': ('api/camera.control.html#airsimcamera', 'UAV/camera/control.py'),
                                    'UAV.camera.control.gstreamerCamera': ( 'api/camera.control.html#gstreamercamera',
                                                                            'UAV/camera/control.py'),
                                    'UAV.camera.control.videoCamera': ('api/camera.control.html#videocamera', 'UAV/camera/control.py')},
            'UAV.config': {'UAV.config._git_repo': ('api/config.html#_git_repo', 'UAV/config.py')},
            'UAV.core': {'UAV.core.say_gday': ('api/core.html#say_gday', 'UAV/core.py')},
            'UAV.gstreamer.examples': { 'UAV.gstreamer.examples.DefaultParams': ( 'api/gstreamer.examples.html#defaultparams',
                                                                                  'UAV/gstreamer/examples.py')},
            'UAV.gstreamer.raw': {},
            'UAV.gstreamer.valve': { 'UAV.gstreamer.valve.DefaultParams': ( 'api/gstreamer.valve.html#defaultparams',
                                                                            'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream': ('api/gstreamer.valve.html#gststream', 'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.__enter__': ( 'api/gstreamer.valve.html#gststream.__enter__',
                                                                                  'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.__exit__': ( 'api/gstreamer.valve.html#gststream.__exit__',
                                                                                 'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.__init__': ( 'api/gstreamer.valve.html#gststream.__init__',
                                                                                 'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.close': ( 'api/gstreamer.valve.html#gststream.close',
                                                                              'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.frame': ( 'api/gstreamer.valve.html#gststream.frame',
                                                                              'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.frame_available': ( 'api/gstreamer.valve.html#gststream.frame_available',
                                                                                        'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.get_valve_state': ( 'api/gstreamer.valve.html#gststream.get_valve_state',
                                                                                        'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.gst_to_opencv': ( 'api/gstreamer.valve.html#gststream.gst_to_opencv',
                                                                                      'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.msg_thread_func': ( 'api/gstreamer.valve.html#gststream.msg_thread_func',
                                                                                        'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.on_message': ( 'api/gstreamer.valve.html#gststream.on_message',
                                                                                   'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.set_valve_state': ( 'api/gstreamer.valve.html#gststream.set_valve_state',
                                                                                        'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.sink_callback': ( 'api/gstreamer.valve.html#gststream.sink_callback',
                                                                                      'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.GstStream.start_gst': ( 'api/gstreamer.valve.html#gststream.start_gst',
                                                                                  'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt': ('api/gstreamer.valve.html#mqtt', 'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.__enter__': ( 'api/gstreamer.valve.html#mqtt.__enter__',
                                                                             'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.__exit__': ( 'api/gstreamer.valve.html#mqtt.__exit__',
                                                                            'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.__init__': ( 'api/gstreamer.valve.html#mqtt.__init__',
                                                                            'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.close': ('api/gstreamer.valve.html#mqtt.close', 'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.on_connect': ( 'api/gstreamer.valve.html#mqtt.on_connect',
                                                                              'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.on_mqtt_message': ( 'api/gstreamer.valve.html#mqtt.on_mqtt_message',
                                                                                   'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.Mqtt.wait_connection': ( 'api/gstreamer.valve.html#mqtt.wait_connection',
                                                                                   'UAV/gstreamer/valve.py'),
                                     'UAV.gstreamer.valve.ping_ip': ('api/gstreamer.valve.html#ping_ip', 'UAV/gstreamer/valve.py')},
            'UAV.imports': {},
            'UAV.logging': {},
            'UAV.mavlink.base': { 'UAV.mavlink.base.LeakyQueue': ('api/mavlink.base.html#leakyqueue', 'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.LeakyQueue.__init__': ( 'api/mavlink.base.html#leakyqueue.__init__',
                                                                            'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.LeakyQueue.dropped': ( 'api/mavlink.base.html#leakyqueue.dropped',
                                                                           'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.LeakyQueue.put': ('api/mavlink.base.html#leakyqueue.put', 'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase': ('api/mavlink.base.html#mavlinkbase', 'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.__enter__': ( 'api/mavlink.base.html#mavlinkbase.__enter__',
                                                                              'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.__exit__': ( 'api/mavlink.base.html#mavlinkbase.__exit__',
                                                                             'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.__init__': ( 'api/mavlink.base.html#mavlinkbase.__init__',
                                                                             'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.__repr__': ( 'api/mavlink.base.html#mavlinkbase.__repr__',
                                                                             'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.__str__': ( 'api/mavlink.base.html#mavlinkbase.__str__',
                                                                            'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase._test_command': ( 'api/mavlink.base.html#mavlinkbase._test_command',
                                                                                  'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.check_message': ( 'api/mavlink.base.html#mavlinkbase.check_message',
                                                                                  'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.client': ( 'api/mavlink.base.html#mavlinkbase.client',
                                                                           'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.close': ('api/mavlink.base.html#mavlinkbase.close', 'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.count_message': ( 'api/mavlink.base.html#mavlinkbase.count_message',
                                                                                  'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.listen': ( 'api/mavlink.base.html#mavlinkbase.listen',
                                                                           'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.log': ('api/mavlink.base.html#mavlinkbase.log', 'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.on_ack_rcvd': ( 'api/mavlink.base.html#mavlinkbase.on_ack_rcvd',
                                                                                'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.on_command_rcvd': ( 'api/mavlink.base.html#mavlinkbase.on_command_rcvd',
                                                                                    'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.on_heartbeat_rcvd': ( 'api/mavlink.base.html#mavlinkbase.on_heartbeat_rcvd',
                                                                                      'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.send_ack': ( 'api/mavlink.base.html#mavlinkbase.send_ack',
                                                                             'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.send_command': ( 'api/mavlink.base.html#mavlinkbase.send_command',
                                                                                 'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.send_heartbeat': ( 'api/mavlink.base.html#mavlinkbase.send_heartbeat',
                                                                                   'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.send_ping': ( 'api/mavlink.base.html#mavlinkbase.send_ping',
                                                                              'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.server': ( 'api/mavlink.base.html#mavlinkbase.server',
                                                                           'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.start_mavlink': ( 'api/mavlink.base.html#mavlinkbase.start_mavlink',
                                                                                  'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.wait_ack': ( 'api/mavlink.base.html#mavlinkbase.wait_ack',
                                                                             'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base.MavLinkBase.wait_heartbeat': ( 'api/mavlink.base.html#mavlinkbase.wait_heartbeat',
                                                                                   'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base._Client': ('api/mavlink.base.html#_client', 'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base._Client.do_nothing': ( 'api/mavlink.base.html#_client.do_nothing',
                                                                           'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base._Server': ('api/mavlink.base.html#_server', 'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base._Server.do_nothing': ( 'api/mavlink.base.html#_server.do_nothing',
                                                                           'UAV/mavlink/base.py'),
                                  'UAV.mavlink.base._test_client_server': ( 'api/mavlink.base.html#_test_client_server',
                                                                            'UAV/mavlink/base.py')},
            'UAV.mavlink.cam_client_server': { 'UAV.mavlink.cam_client_server.CamClient': ( 'api/mavlink.cam_client_server.html#camclient',
                                                                                            'UAV/mavlink/cam_client_server.py'),
                                               'UAV.mavlink.cam_client_server.CamClient.__init__': ( 'api/mavlink.cam_client_server.html#camclient.__init__',
                                                                                                     'UAV/mavlink/cam_client_server.py'),
                                               'UAV.mavlink.cam_client_server.CamClient.trigger_camera': ( 'api/mavlink.cam_client_server.html#camclient.trigger_camera',
                                                                                                           'UAV/mavlink/cam_client_server.py'),
                                               'UAV.mavlink.cam_client_server.CamServer': ( 'api/mavlink.cam_client_server.html#camserver',
                                                                                            'UAV/mavlink/cam_client_server.py'),
                                               'UAV.mavlink.cam_client_server.CamServer.__init__': ( 'api/mavlink.cam_client_server.html#camserver.__init__',
                                                                                                     'UAV/mavlink/cam_client_server.py'),
                                               'UAV.mavlink.cam_client_server.test_cam_client_server': ( 'api/mavlink.cam_client_server.html#test_cam_client_server',
                                                                                                         'UAV/mavlink/cam_client_server.py')},
            'UAV.params': {},
            'UAV.process': {},
            'UAV.template.o1': {},
            'UAV.template01': {},
            'UAV.utils.display': { 'UAV.utils.display.ScrollingLog': ('api/utils.display.html#scrollinglog', 'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLog.__init__': ( 'api/utils.display.html#scrollinglog.__init__',
                                                                                'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLog.draw': ( 'api/utils.display.html#scrollinglog.draw',
                                                                            'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLog.update': ( 'api/utils.display.html#scrollinglog.update',
                                                                              'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLogHandler': ( 'api/utils.display.html#scrollingloghandler',
                                                                              'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLogHandler.__init__': ( 'api/utils.display.html#scrollingloghandler.__init__',
                                                                                       'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLogHandler.emit': ( 'api/utils.display.html#scrollingloghandler.emit',
                                                                                   'UAV/utils/display.py'),
                                   'UAV.utils.display.ScrollingLogHandler.set_filter': ( 'api/utils.display.html#scrollingloghandler.set_filter',
                                                                                         'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter': ('api/utils.display.html#videowriter', 'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter.__enter__': ( 'api/utils.display.html#videowriter.__enter__',
                                                                                'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter.__exit__': ( 'api/utils.display.html#videowriter.__exit__',
                                                                               'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter.__init__': ( 'api/utils.display.html#videowriter.__init__',
                                                                               'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter.add': ('api/utils.display.html#videowriter.add', 'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter.close': ( 'api/utils.display.html#videowriter.close',
                                                                            'UAV/utils/display.py'),
                                   'UAV.utils.display.VideoWriter.show': ( 'api/utils.display.html#videowriter.show',
                                                                           'UAV/utils/display.py'),
                                   'UAV.utils.display._fig_bounds': ('api/utils.display.html#_fig_bounds', 'UAV/utils/display.py'),
                                   'UAV.utils.display.puttext': ('api/utils.display.html#puttext', 'UAV/utils/display.py'),
                                   'UAV.utils.display.show_image': ('api/utils.display.html#show_image', 'UAV/utils/display.py')},
            'UAV.utils.sim_linux': {}}}
