# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/UAV',
                'doc_host': 'https://johnnewto.github.io',
                'git_url': 'https://github.com/johnnewto/UAV',
                'lib_path': 'tests'},
  'syms': { 'tests.airsim.test_client': { 'tests.airsim.test_client.AirSimClient.get_state': ( 'api/airsim.client.html#airsimclient.get_state',
                                                                                               'tests/airsim/test_client.py'),
                                          'tests.airsim.test_client.AirSimClient.takeoff': ( 'api/airsim.client.html#airsimclient.takeoff',
                                                                                             'tests/airsim/test_client.py')},
            'tests.airsim.test_commands': {},
            'tests.camera.test_fake_cam': { 'tests.camera.test_fake_cam.BaseCamera': ( 'api/camera.fake.html#basecamera',
                                                                                       'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.BaseCamera.__init__': ( 'api/camera.fake.html#basecamera.__init__',
                                                                                                'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.BaseCamera.camera_information_send': ( 'api/camera.fake.html#basecamera.camera_information_send',
                                                                                                               'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.BaseCamera.close': ( 'api/camera.fake.html#basecamera.close',
                                                                                             'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.BaseCamera.get_camera_info': ( 'api/camera.fake.html#basecamera.get_camera_info',
                                                                                                       'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera': ( 'api/camera.fake.html#cv2camera',
                                                                                      'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.__enter__': ( 'api/camera.fake.html#cv2camera.__enter__',
                                                                                                'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.__exit__': ( 'api/camera.fake.html#cv2camera.__exit__',
                                                                                               'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.__init__': ( 'api/camera.fake.html#cv2camera.__init__',
                                                                                               'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.__repr__': ( 'api/camera.fake.html#cv2camera.__repr__',
                                                                                               'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.__str__': ( 'api/camera.fake.html#cv2camera.__str__',
                                                                                              'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.calculate_memory_usage': ( 'api/camera.fake.html#cv2camera.calculate_memory_usage',
                                                                                                             'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.camera_capture_status_send': ( 'api/camera.fake.html#cv2camera.camera_capture_status_send',
                                                                                                                 'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.camera_image_captured_send': ( 'api/camera.fake.html#cv2camera.camera_image_captured_send',
                                                                                                                 'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.camera_settings_send': ( 'api/camera.fake.html#cv2camera.camera_settings_send',
                                                                                                           'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.close': ( 'api/camera.fake.html#cv2camera.close',
                                                                                            'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.image_capture_thread_is_running': ( 'api/camera.fake.html#cv2camera.image_capture_thread_is_running',
                                                                                                                      'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.image_start_capture': ( 'api/camera.fake.html#cv2camera.image_start_capture',
                                                                                                          'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.image_stop_capture': ( 'api/camera.fake.html#cv2camera.image_stop_capture',
                                                                                                         'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.log': ( 'api/camera.fake.html#cv2camera.log',
                                                                                          'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.on_capture_image': ( 'api/camera.fake.html#cv2camera.on_capture_image',
                                                                                                       'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.on_start_image_capture': ( 'api/camera.fake.html#cv2camera.on_start_image_capture',
                                                                                                             'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.on_stop_image_capture': ( 'api/camera.fake.html#cv2camera.on_stop_image_capture',
                                                                                                            'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.save_image_to_memoryfs': ( 'api/camera.fake.html#cv2camera.save_image_to_memoryfs',
                                                                                                             'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.storage_information_send': ( 'api/camera.fake.html#cv2camera.storage_information_send',
                                                                                                               'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CV2Camera.time_UTC_usec': ( 'api/camera.fake.html#cv2camera.time_utc_usec',
                                                                                                    'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CameraCaptureStatus': ( 'api/camera.fake.html#cameracapturestatus',
                                                                                                'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CameraCaptureStatus.__repr__': ( 'api/camera.fake.html#cameracapturestatus.__repr__',
                                                                                                         'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CameraCaptureStatus.__str__': ( 'api/camera.fake.html#cameracapturestatus.__str__',
                                                                                                        'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CaptureThread': ( 'api/camera.fake.html#capturethread',
                                                                                          'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CaptureThread.__init__': ( 'api/camera.fake.html#capturethread.__init__',
                                                                                                   'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CaptureThread._run': ( 'api/camera.fake.html#capturethread._run',
                                                                                               'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CaptureThread.is_running': ( 'api/camera.fake.html#capturethread.is_running',
                                                                                                     'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CaptureThread.start': ( 'api/camera.fake.html#capturethread.start',
                                                                                                'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.CaptureThread.stop': ( 'api/camera.fake.html#capturethread.stop',
                                                                                               'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.GSTCamera': ( 'api/camera.fake.html#gstcamera',
                                                                                      'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.GSTCamera.__init__': ( 'api/camera.fake.html#gstcamera.__init__',
                                                                                               'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.GSTCamera.close': ( 'api/camera.fake.html#gstcamera.close',
                                                                                            'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.GSTCamera.image_start_capture': ( 'api/camera.fake.html#gstcamera.image_start_capture',
                                                                                                          'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.GSTCamera.image_stop_capture': ( 'api/camera.fake.html#gstcamera.image_stop_capture',
                                                                                                         'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.GSTCamera.on_capture_image': ( 'api/camera.fake.html#gstcamera.on_capture_image',
                                                                                                       'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.GSTCamera.on_status_video_capture': ( 'api/camera.fake.html#gstcamera.on_status_video_capture',
                                                                                                              'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.GSTCamera.save_image_to_memoryfs': ( 'api/camera.fake.html#gstcamera.save_image_to_memoryfs',
                                                                                                             'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.GSTCamera.video_start_capture': ( 'api/camera.fake.html#gstcamera.video_start_capture',
                                                                                                          'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.GSTCamera.video_start_streaming': ( 'api/camera.fake.html#gstcamera.video_start_streaming',
                                                                                                            'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.GSTCamera.video_stop_capture': ( 'api/camera.fake.html#gstcamera.video_stop_capture',
                                                                                                         'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.GSTCamera.video_stop_streaming': ( 'api/camera.fake.html#gstcamera.video_stop_streaming',
                                                                                                           'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.airsimCamera': ( 'api/camera.fake.html#airsimcamera',
                                                                                         'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.read_camera_dict_from_toml': ( 'api/camera.fake.html#read_camera_dict_from_toml',
                                                                                                       'tests/camera/test_fake_cam.py'),
                                            'tests.camera.test_fake_cam.videoCamera': ( 'api/camera.fake.html#videocamera',
                                                                                        'tests/camera/test_fake_cam.py')},
            'tests.gstreamer.test_valve': {},
            'tests.mavlink.test_camera': { 'tests.mavlink.test_camera.Cam1': ( 'api/mavlink.camera.html#cam1',
                                                                               'tests/mavlink/test_camera.py'),
                                           'tests.mavlink.test_camera.Cam1.__init__': ( 'api/mavlink.camera.html#cam1.__init__',
                                                                                        'tests/mavlink/test_camera.py'),
                                           'tests.mavlink.test_camera.Cam2': ( 'api/mavlink.camera.html#cam2',
                                                                               'tests/mavlink/test_camera.py'),
                                           'tests.mavlink.test_camera.Cam2.__init__': ( 'api/mavlink.camera.html#cam2.__init__',
                                                                                        'tests/mavlink/test_camera.py'),
                                           'tests.mavlink.test_camera.Cli': ('api/mavlink.camera.html#cli', 'tests/mavlink/test_camera.py'),
                                           'tests.mavlink.test_camera.Cli.__init__': ( 'api/mavlink.camera.html#cli.__init__',
                                                                                       'tests/mavlink/test_camera.py'),
                                           'tests.mavlink.test_camera.test_ack': ( 'api/mavlink.camera.html#test_ack',
                                                                                   'tests/mavlink/test_camera.py')},
            'tests.mavlink.test_component': { 'tests.mavlink.test_component.Cam1': ( 'api/mavlink.component.html#cam1',
                                                                                     'tests/mavlink/test_component.py'),
                                              'tests.mavlink.test_component.Cam1.__init__': ( 'api/mavlink.component.html#cam1.__init__',
                                                                                              'tests/mavlink/test_component.py'),
                                              'tests.mavlink.test_component.Cam2': ( 'api/mavlink.component.html#cam2',
                                                                                     'tests/mavlink/test_component.py'),
                                              'tests.mavlink.test_component.Cam2.__init__': ( 'api/mavlink.component.html#cam2.__init__',
                                                                                              'tests/mavlink/test_component.py'),
                                              'tests.mavlink.test_component.Cli': ( 'api/mavlink.component.html#cli',
                                                                                    'tests/mavlink/test_component.py'),
                                              'tests.mavlink.test_component.Cli.__init__': ( 'api/mavlink.component.html#cli.__init__',
                                                                                             'tests/mavlink/test_component.py'),
                                              'tests.mavlink.test_component.test_ack': ( 'api/mavlink.component.html#test_ack',
                                                                                         'tests/mavlink/test_component.py')},
            'tests.mavlink.test_mavcom': { 'tests.mavlink.test_mavcom.test_MAVCom': ( 'api/mavlink.mavcom.html#test_mavcom',
                                                                                      'tests/mavlink/test_mavcom.py')},
            'tests.mavlink.test_vs_gimbal': {},
            'tests.params': {},
            'tests.template.test_01': {},
            'tests.template01': {},
            'tests.utils.test_display': {},
            'tests.utils.test_general': {}}}
